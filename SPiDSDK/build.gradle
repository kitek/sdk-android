buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-plugin:1.1'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven'

project.version = '1.3.6'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 8
        versionName project.version
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['src']
            assets.srcDirs = ['assets']
        }

        androidTest {
            java.srcDirs = ['androidTest/java']
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository url: "file://${project.getProjectDir()}/repo"
            pom.groupId = "no.schibstedpayment"
            pom.artifactId = "SPiD-Android"
            pom.version = project.version
        }
    }
}

task generateJavadocs(type: Javadoc) {

}

android.libraryVariants.all { variant ->

    task("generate${variant.name}Javadoc", type: Javadoc) {
        title = "$name $version API"
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        options.links("http://docs.oracle.com/javase/7/docs/api/");
        ext.androidString = ext.androidJar.toString()
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}

task generateJar(type: Copy) {
    from('build/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename('classes.jar', "${project.name}-${project.version}.jar")
}

task generateSourceJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task generateJavadocsJar(dependsOn: generateJavadocs, type: Jar) {
    classifier = 'javadoc'
    from generateJavadocs.destinationDir
}

artifacts {
    archives generateSourceJar
    archives generateJavadocsJar
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.0.4-beta'
}

assemble.dependsOn(generateJar)
assemble.dependsOn(generateSourceJar)
assemble.dependsOn(generateJavadocsJar)
